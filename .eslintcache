[{"/home/rohitbhandari/rohitB/onepantry_updated/src/index.js":"1","/home/rohitbhandari/rohitB/onepantry_updated/src/reportWebVitals.js":"2","/home/rohitbhandari/rohitB/onepantry_updated/src/App.js":"3","/home/rohitbhandari/rohitB/onepantry_updated/src/Menu.js":"4","/home/rohitbhandari/rohitB/onepantry_updated/src/Header.js":"5","/home/rohitbhandari/rohitB/onepantry_updated/src/Footer.js":"6","/home/rohitbhandari/rohitB/onepantry_updated/src/Dashboard.js":"7","/home/rohitbhandari/rohitB/onepantry_updated/src/components/login/login.js":"8","/home/rohitbhandari/rohitB/onepantry_updated/src/components/router.js":"9","/home/rohitbhandari/rohitB/onepantry_updated/src/components/Layout/Layout.js":"10","/home/rohitbhandari/rohitB/onepantry_updated/src/components/Profile/profile.js":"11","/home/rohitbhandari/rohitB/onepantry_updated/src/components/Profile/changePassword.js":"12"},{"size":595,"mtime":1676271516562,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1609214110000,"results":"15","hashOfConfig":"14"},{"size":408,"mtime":1676268659431,"results":"16","hashOfConfig":"14"},{"size":4639,"mtime":1676379563042,"results":"17","hashOfConfig":"14"},{"size":6948,"mtime":1676379587830,"results":"18","hashOfConfig":"14"},{"size":442,"mtime":1609347380000,"results":"19","hashOfConfig":"14"},{"size":6564,"mtime":1676379443488,"results":"20","hashOfConfig":"14"},{"size":7043,"mtime":1676278930269,"results":"21","hashOfConfig":"14"},{"size":1051,"mtime":1676375301578,"results":"22","hashOfConfig":"14"},{"size":950,"mtime":1676272262159,"results":"23","hashOfConfig":"14"},{"size":9091,"mtime":1676376874045,"results":"24","hashOfConfig":"14"},{"size":9123,"mtime":1676363897898,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"16nx9e",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"/home/rohitbhandari/rohitB/onepantry_updated/src/index.js",[],["55","56"],"/home/rohitbhandari/rohitB/onepantry_updated/src/reportWebVitals.js",[],"/home/rohitbhandari/rohitB/onepantry_updated/src/App.js",[],"/home/rohitbhandari/rohitB/onepantry_updated/src/Menu.js",["57","58","59","60","61","62","63","64"],"/home/rohitbhandari/rohitB/onepantry_updated/src/Header.js",["65","66","67"],"/home/rohitbhandari/rohitB/onepantry_updated/src/Footer.js",[],["68","69"],"/home/rohitbhandari/rohitB/onepantry_updated/src/Dashboard.js",["70","71","72","73","74"],"/home/rohitbhandari/rohitB/onepantry_updated/src/components/login/login.js",["75","76","77"],"import React from 'react'\nimport loginCss from \"./login.module.css\"\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst Login = () => {\n    const navigate = useNavigate();\n\n    const [username, setNameValue] = useState(\"\");\n    const [password, setPasswordValue] = useState(\"\");\n    const setName = (e) => {\n        setNameValue(e.target.value)\n    }\n\n    const setPassword = (e) => {\n        setPasswordValue(e.target.value)\n    }\n    const login = (e) => {\n        e.preventDefault();\n        console.log(e);\n\n        // const isFormValid = formValidation();\n        // if (isFormValid != true) {\n        //     return false;\n        // }\n        axios.post('http://54.201.160.69:3282/api/v1/admin/signIn', {\n            email: username,\n            password: password\n        })\n            .then(function (response) {\n                console.log(response);\n                const response_status = response.data.status;\n                if (response_status == true) {\n                    localStorage.setItem('userToken', response.data.data.token);\n                    navigate(\"/\");\n                }\n                else {\n\n                }\n            })\n            .catch(function (error) {\n            });\n    }\n\n    // const formValidation = () => {\n    //     if ('' == username) {\n    //         setValidationUsername(\"invalid\");\n    //         return false;\n    //     }\n    //     else {\n    //         setValidationUsername(\"\");\n    //     }\n    //     if ('' == password) {\n    //         setValidationPassword(\"invalid\");\n    //         return false;\n    //     }\n    //     else {\n    //         setValidationPassword(\"\");\n    //     }\n    //     return true;\n    // }\n\n    const default_background_color = { 'backgroundColor': '#2675ff', 'border': '#2675ff' }\n    const default_color = { 'color': '#2675ff', 'fontSize': '15px' }\n    return (\n        <div className={`${loginCss.wrapper} ${loginCss.first}`}>\n            <div id={loginCss.formContent}>\n\n                <div className={`${loginCss.fadeIn} ${loginCss.first}`}>\n                    {/* <img src=\"https://t3.ftcdn.net/jpg/03/03/71/14/360_F_303711499_7o9BGpaDFaJJiOS2RLTY8i9xICgorT3o.jpg\" id=\"icon\" alt=\"User Icon\" style={{ width: \"100px\", height: \"100px\", padding: \"2%\" }} /> */}\n                    <h3 className='mt-4'><b>OnePantry</b></h3>\n                    <h6 style={{ 'color': 'grey' }}>Sign in to start your session</h6>\n                </div>\n\n                <div id=\"login\">\n                    {/* <h3 className=\"text-center text-white\">Login form</h3> */}\n                    <div className=\"container\">\n                        <div\n                            id=\"login-row\"\n                            className=\"row justify-content-center align-items-center\"\n                        >\n                            <div id=\"login-column\" className=\"col-md-10\">\n                                <div id=\"login-box\" className=\"col-md-12\">\n                                    <form id=\"login-form\" className=\"form\" action=\"\" method=\"post\">\n                                        {/* <h3 className=\"text-center text-info\">Login</h3> */}\n                                        <div className=\"form-group mt-4\">\n                                            {/* <label htmlFor=\"username\" className=\"text-info\">\n                                                    Username:\n                                                </label>\n                                                <br /> */}\n                                            <input\n                                                type=\"text\"\n                                                name=\"username\"\n                                                id=\"username\"\n                                                className=\"form-control\"\n                                                placeholder='Username'\n                                                onChange={(e) => setName(e)}\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            {/* <label htmlFor=\"password\" className=\"text-info\">\n                                                    Password:\n                                                </label>\n                                                <br /> */}\n                                            <input\n                                                type=\"text\"\n                                                name=\"password\"\n                                                id=\"password\"\n                                                className=\"form-control\"\n                                                placeholder='Password'\n                                                onChange={(e) => setPassword(e)}\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <div className='row'>\n                                                <div className='col-md-6'>\n                                                    <span>\n                                                        <input id=\"remember-me\" name=\"remember-me\" type=\"checkbox\" />\n                                                    </span>&nbsp;\n                                                    <span><b>Remember me</b></span>\n                                                </div>\n                                                <div className='col-md-6'>\n                                                    <button className=\"btn btn-info btn-md\" style={default_background_color} onClick={(e) => login(e)}>Sign In</button>\n                                                </div>\n                                            </div>\n                                            <div className='row'>\n                                                <div className='col-md-6'>\n                                                    <a href=\"#\" style={default_color}>\n                                                        Forgot Password?\n                                                    </a>\n                                                </div>\n                                                <div className='col-md-6'>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div id={loginCss.formFooter}>\n                    <a className={loginCss.underlineHover} href=\"#\">\n                        Sign Up?\n                    </a>\n                </div>\n            </div>\n        </div>\n\n\n\n\n\n    )\n}\n\nexport default Login","/home/rohitbhandari/rohitB/onepantry_updated/src/components/router.js",[],"/home/rohitbhandari/rohitB/onepantry_updated/src/components/Layout/Layout.js",["78"],"import React from 'react';\nimport { Outlet, Navigate } from 'react-router-dom';\nimport Menu from '../../Menu';\nimport Header from '../../Header';\nimport { ReactSession } from 'react-client-session';\n\n\nconst Layout = () => {\n    // const {\n    //     isAuthenticated } = useSelector(state => state.auth)     \n    //     const [loading, setLoading] = useState(false)\n    // if (!localStorage.getItem('token')) {\n    //     return <Navigate to=\"/login\" />\n    // } if (isAuthenticated === false) {\n    //     return <Navigate to=\"/login\" />\n    // }\n\n    console.log(localStorage.getItem('userToken'));\n    if (!localStorage.getItem('userToken')) {\n        return <Navigate to=\"/login\" />\n    }\n\n\n    return (\n        <>\n            <div className='wrapper'>\n                <Header />\n                <Menu />\n                <div>\n                    <Outlet />\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nexport default Layout","/home/rohitbhandari/rohitB/onepantry_updated/src/components/Profile/profile.js",["79","80","81","82"],"/home/rohitbhandari/rohitB/onepantry_updated/src/components/Profile/changePassword.js",["83","84","85"],"import React, { useState } from 'react'\nimport axios from 'axios'\nimport * as Yup from \"yup\";\n\n\nconst ChangePassword = () => {\n    const default_background_color = { 'backgroundColor': '#2675ff', 'border': '#2675ff' }\n    const [oldPassword, setOldPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n\n    const token = localStorage.getItem('userToken');\n    const handlePasswordChange = () => {\n        const config = {\n            headers: { Authorization: token }\n        };\n\n        axios.post('http://54.201.160.69:3282/api/v1/admin/changepassword', {\n            password: newPassword,\n            old_password: oldPassword\n        }, config)\n            .then(function (response) {\n                alert(\"Success\");\n            })\n            .catch(function (error) {\n                alert(\"Failure\");\n            });\n    }\n\n    return (\n        <>\n            <div className=\"content-wrapper\">\n                <div className=\"content-header\">\n                    <div className=\"container-fluid\">\n                        <section>\n                            <div className=\"container-fluid\">\n                                <div className=\"row mb-2\">\n                                    <div className=\"col-sm-6\">\n                                        <h1>Change Password</h1>\n                                    </div>\n                                    <div className=\"col-sm-6\">\n                                        <ol className=\"breadcrumb float-sm-right\">\n                                            <li className=\"breadcrumb-item\">\n                                                <a href=\"#\">Home</a>\n                                            </li>\n                                            <li className=\"breadcrumb-item active\">Change Password</li>\n                                        </ol>\n                                    </div>\n                                </div>\n                            </div>\n                        </section>\n                        <section className=\"content mt-5\">\n                            <div className=\"container-fluid\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <div className=\"card\">\n                                            <div className=\"card-body\">\n                                                <div className=\"tab-content\">\n                                                    <div className=\"active tab-pane\" id=\"settings\">\n                                                        <form className=\"form-horizontal\">\n                                                            <div className=\"form-group row\">\n                                                                <label\n                                                                    htmlFor=\"inputNewPassword\"\n                                                                    className=\"col-sm-2 col-form-label\"\n                                                                >Old Password</label>\n                                                                <div className=\"col-sm-4\">\n                                                                    <input\n                                                                        style={{ 'text-align': 'left' }}\n                                                                        type=\"password\"\n                                                                        className=\"form-control\"\n                                                                        id=\"inputOldPassword\"\n                                                                        placeholder=\"Old Password\"\n                                                                        onChange={(e) => setOldPassword(e.target.value)}\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"form-group row\">\n                                                                <label\n                                                                    htmlFor=\"inputNewPassword\"\n                                                                    className=\"col-sm-2 col-form-label\"\n                                                                >\n                                                                    New Password\n                                                                </label>\n                                                                <div className=\"col-sm-4\">\n                                                                    <input\n                                                                        style={{ 'text-align': 'left' }}\n                                                                        type=\"password\"\n                                                                        className=\"form-control\"\n                                                                        id=\"inputNewPassword\"\n                                                                        placeholder=\"New Password\"\n                                                                        onChange={(e) => setNewPassword(e.target.value)}\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"form-group row\">\n                                                                <label\n                                                                    htmlFor=\"inputConfirmPassword\"\n                                                                    className=\"col-sm-2 col-form-label\"\n                                                                >\n                                                                    Confirm Password\n                                                                </label>\n                                                                <div className=\"col-sm-4\">\n                                                                    <input\n                                                                        style={{ 'text-align': 'left' }}\n                                                                        type=\"password\"\n                                                                        className=\"form-control\"\n                                                                        id=\"inputConfirmPassword\"\n                                                                        placeholder=\"Confirm Password\"\n                                                                        onChange={(e) => setConfirmPassword(e.target.value)}\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"form-group row mt-4\">\n                                                                <div className=\"mt-4 col-sm-3\">\n                                                                    <button\n                                                                        onClick={() => handlePasswordChange()}\n                                                                        type=\"button\" className=\"btn btn-block btn-danger\" style={default_background_color}>\n                                                                        Change Password\n                                                                    </button>\n                                                                </div>\n                                                            </div>\n                                                        </form>\n                                                    </div>\n                                                    {/* /.tab-pane */}\n                                                </div>\n                                                {/* /.tab-content */}\n                                            </div>\n                                            {/* /.card-body */}\n                                        </div>\n                                        {/* /.card */}\n                                    </div>\n                                    {/* /.col */}\n                                </div>\n                                {/* /.row */}\n                            </div>\n                            {/* /.container-fluid */}\n                        </section>\n                        {/* /.content */}\n                    </div>\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nexport default ChangePassword",{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":28,"column":15,"nodeType":"92","endLine":28,"endColumn":155},{"ruleId":"93","severity":1,"message":"94","line":31,"column":15,"nodeType":"92","endLine":31,"endColumn":47},{"ruleId":"93","severity":1,"message":"94","line":54,"column":17,"nodeType":"92","endLine":54,"endColumn":50},{"ruleId":"93","severity":1,"message":"94","line":63,"column":21,"nodeType":"92","endLine":63,"endColumn":54},{"ruleId":"93","severity":1,"message":"94","line":70,"column":21,"nodeType":"92","endLine":70,"endColumn":54},{"ruleId":"93","severity":1,"message":"94","line":78,"column":17,"nodeType":"92","endLine":78,"endColumn":50},{"ruleId":"93","severity":1,"message":"95","line":87,"column":21,"nodeType":"92","endLine":87,"endColumn":85},{"ruleId":"93","severity":1,"message":"95","line":94,"column":21,"nodeType":"92","endLine":94,"endColumn":93},{"ruleId":"93","severity":1,"message":"94","line":18,"column":13,"nodeType":"92","endLine":18,"endColumn":69},{"ruleId":"93","severity":1,"message":"94","line":118,"column":13,"nodeType":"92","endLine":118,"endColumn":69},{"ruleId":"93","severity":1,"message":"95","line":131,"column":15,"nodeType":"92","endLine":131,"endColumn":77},{"ruleId":"86","replacedBy":"96"},{"ruleId":"88","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":32,"column":6,"nodeType":"100","endLine":32,"endColumn":8,"suggestions":"101"},{"ruleId":"93","severity":1,"message":"94","line":101,"column":19,"nodeType":"92","endLine":101,"endColumn":60},{"ruleId":"93","severity":1,"message":"94","line":115,"column":19,"nodeType":"92","endLine":115,"endColumn":60},{"ruleId":"93","severity":1,"message":"94","line":129,"column":19,"nodeType":"92","endLine":129,"endColumn":60},{"ruleId":"93","severity":1,"message":"94","line":142,"column":19,"nodeType":"92","endLine":142,"endColumn":60},{"ruleId":"102","severity":1,"message":"103","line":34,"column":37,"nodeType":"104","messageId":"105","endLine":34,"endColumn":39},{"ruleId":"93","severity":1,"message":"94","line":129,"column":53,"nodeType":"92","endLine":129,"endColumn":87},{"ruleId":"93","severity":1,"message":"94","line":146,"column":21,"nodeType":"92","endLine":146,"endColumn":69},{"ruleId":"106","severity":1,"message":"107","line":5,"column":10,"nodeType":"108","messageId":"109","endLine":5,"endColumn":22},{"ruleId":"98","severity":1,"message":"110","line":13,"column":8,"nodeType":"100","endLine":13,"endColumn":10,"suggestions":"111"},{"ruleId":"93","severity":1,"message":"94","line":45,"column":49,"nodeType":"92","endLine":45,"endColumn":61},{"ruleId":"90","severity":1,"message":"91","line":63,"column":53,"nodeType":"92","endLine":67,"endColumn":55},{"ruleId":"93","severity":1,"message":"94","line":71,"column":49,"nodeType":"92","endLine":71,"endColumn":99},{"ruleId":"106","severity":1,"message":"112","line":3,"column":13,"nodeType":"108","messageId":"109","endLine":3,"endColumn":16},{"ruleId":"106","severity":1,"message":"113","line":10,"column":12,"nodeType":"108","messageId":"109","endLine":10,"endColumn":27},{"ruleId":"93","severity":1,"message":"94","line":44,"column":49,"nodeType":"92","endLine":44,"endColumn":61},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",["114"],["115"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getDashboardData' and 'getUsersData'. Either include them or remove the dependency array.","ArrayExpression",["116"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'ReactSession' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getUserDetails'. Either include it or remove the dependency array.",["117"],"'Yup' is defined but never used.","'confirmPassword' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [getDashboardData, getUsersData]",{"range":"122","text":"123"},"Update the dependencies array to be: [getUserDetails]",{"range":"124","text":"125"},[870,872],"[getDashboardData, getUsersData]",[429,431],"[getUserDetails]"]